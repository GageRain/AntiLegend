Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

========================================


beware of the initial of result 

result = num[0] + num[1] + num[2];

Solution:

public class Solution {
    public int threeSumClosest(int[] num, int target) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(num == null || num.length <= 2){
            return 0;
        }
        Arrays.sort(num);
        int min = num[0] + num[1] + num[2];
        for(int i = 0 ; i < num.length -2; i++){
            if( i != 0 && num[i] == num[i - 1]){continue;}
            int low = i + 1;
            int high = num.length -1;
            while(low < high ){
                int sum = num[i] + num[low] + num[high];
                if(Math.abs(sum - target) < Math.abs(min - target)){
                    min = sum ;
                }
                if(sum == target){
                    return target;
                }else if(sum < target){
                    low ++;
                }else{
                    high--;
                }
            }
        }
        return min;
    }
}