public class Solution {
    public void solveSudoku(char[][] board) {
        // Start typing your Java solution below
        // DO NOT write main() function
        solve(board);
    }
    
    boolean solve(char[][] board){
        for(int i = 0 ; i < board.length; i ++){
            for(int j = 0 ; j < board.length; j++){
                if(board[i][j] == '.'){
                    for(char k = '1'; k<= '9'; k++){
                        board[i][j] = k;
                        if(valid(board,i,j) && solve(board)){
                            return true;
                        }
                    }
                    board[i][j] = '.';
                    return false;
                }
            }
        }
        return true;
    }
    
    boolean valid(char[][] board,int x, int y){
        for(int i = 0 ; i < board.length; i++){
            if(i!=x && board[i][y] == board[x][y]){
                return false;
            }
            if(i != y && board[x][i] == board[x][y]){
                return false;
            }
        }
        int bx = x - x % 3;
        int by = y - y % 3;
        for(int i=0; i < 3; i++){
            for(int j = 0 ; j < 3; j++){
                if(x != (i + bx) && y != (j + by) && board[x][y] == board[i + bx][j + by]){
                    return false;
                }
            }
        }
        return true;
    }
}