public class Solution {
    public double pow(double x, int n) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(x == 0){
            return 0;
        }
        return itePow(x,n);
    }
    
    //recursive solution
    double recPow(double x, int n){
        if(n == 0){
            return 1;
        }
        double tmp = recPow(x,n / 2);
        if( n % 2 == 0){
            return tmp * tmp;
        }else{
            if(n > 0){
                return tmp * tmp * x;
            }else{
                return tmp * tmp / x;
            }
        }
    }
    
    //iterative solution
    double itePow(double x, int n){
        long nn = n;
        double res = 1;
        if(n < 0 ){
            nn *= -1;
        }
        while(nn > 0){
            if((nn & 1) == 1){
                res *= x; 
            }
            x *= x;
            nn = nn >> 1;
        }
        return n < 0?1 / res:res;
    }
}